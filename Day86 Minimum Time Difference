Given a list of 24-hour clock time points in "HH:MM" format, return the minimum minutes difference between any two time-points in the list.
 

Example 1:

Input: timePoints = ["23:59","00:00"]
Output: 1
Example 2:

Input: timePoints = ["00:00","23:59","00:00"]
Output: 0
 

Constraints:

2 <= timePoints.length <= 2 * 104
timePoints[i] is in the format "HH:MM".


class Solution {
    public int findMinDifference(List<String> timePoints) {
        int len = timePoints.size();
      int[] array = new int[len];
      for (int i = 0; i < len; i++) {
          array[i] = format(timePoints.get(i));
      }
      Arrays.sort(array);
      int res = Integer.MAX_VALUE;
      int t;
      for (int i = 0; i < len; i++) {
          t = Math.abs(array[i] - array[(i + 1) % len]);
          if (t > 12 * 60) {
              t = 24 * 60 - t;
          }
          res = Math.min(res, t);
      }
      return res;
  }

  private int format(String s) {
      String[] a = s.split(":");
      return Integer.parseInt(a[0]) * 60 + Integer.parseInt(a[1]);
    }
}
